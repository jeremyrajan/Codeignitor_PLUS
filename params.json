{"name":"Codeignitor plus","tagline":"Codeignitor (HMVC) +Templates+ Foundation + jQuery","body":"# Codeignitor PLUS\r\n\r\nI have been searching for articles online to implement templating for CI, but most of them them tend to be complicated to implement or confusing! :( . Finally, I arrived at this article http://net.tutsplus.com/tutorials/php/an-introduction-to-views-templating-in-codeigniter/ which was a life saver.\r\n\r\nHence, I implemented the same into the framework with a little bit of extra.\r\n\r\n***\r\nv0.2\r\n<ul>\r\n<li>Added Foundation & jQuery support</li>\r\n<li>Included modules functionality</li>\r\n<li>Basic template add</li>\r\n</ul>\r\n\r\n***\r\nv0.1\r\n<ul>\r\n<li>Refer, application/config/autoload.php to enable 'template' library.</li>\r\n<li>Template dir resides in views/templates/</li>\r\n<li>Template lib in system/libraries/Template.php</li>\r\n<li>Public dir has index file, set virtual host accordingly!</li>\r\n</ul>\r\n***\r\n\r\n\r\nDisplaying the template inside the controller:-\r\n<pre>\r\n     $this->template->load('default', 'content', $data);\r\n</pre>\r\n\r\n<p>where, 'default' is the default/master template which resides in views/templates/<p>\r\n<p>'content' is the page/view you want to display inside the template. Location: views/content.php</p>\r\n<p>'data' is the variable/values you want to pass to the views/template</p>\r\n\r\nStay tuned! And hope it helps someone :)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}